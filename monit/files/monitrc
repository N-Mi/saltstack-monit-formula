{% from "monit/map.jinja" import monit with context %}
set daemon {{ salt['pillar.get']('monit:daemon_interval') }}
{%- if salt['pillar.get']('monit:start_delay') %}
with start delay {{ salt['pillar.get']('monit:start_delay') }}
{%- endif %}

set logfile {{ salt['pillar.get']('monit:logfile') }}

set idfile {{ monit.idfile }}
set statefile {{ monit.statefile }}
set eventqueue
    basedir {{ monit.eventsdir }} # set the base directory where events will be stored
    slots 100                     # optionally limit the queue size

{% if salt['pillar.get']('monit:mail') %}
set mailserver {{ salt['pillar.get']('monit:mail:server') }} port {{ salt['pillar.get']('monit:mail:port') }}
{%- if salt['pillar.get']('monit:mail:username') %}
  username "{{ salt['pillar.get']('monit:mail:username') }}" password "{{ salt['pillar.get']('monit:mail:password') }}"
{%- endif %}
{%- if salt['pillar.get']('monit:mail:ssl') %}
  using SSLAUTO
{%- endif %}
  with timeout 30 seconds
{% endif -%}
{% if salt['pillar.get']('monit:alert') %}
{% for email in pillar['monit']['alert'] -%}
set alert {{email}}
{% endfor -%}
{% endif -%}
{% if salt['pillar.get']('monit:httpd') %}
set httpd port {{ salt['pillar.get']('monit:httpd:port') }} and
  use address {{ salt['pillar.get']('monit:httpd:bind') }}
  {% for statement in pillar['monit']['httpd']['allow'] -%}
  allow {{ statement }}
  {% endfor -%}
{% endif %}
include {{ confd_dir }}/*.cfg
